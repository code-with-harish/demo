import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import jsPDF from "jspdf";
import { FaUtensils } from "react-icons/fa";

export default function DietPage() {
  const router = useRouter();
  const [dietData, setDietData] = useState(null);

  useEffect(() => {
    if (router.query.data) {
      try {
        const parsed = JSON.parse(router.query.data);
        setDietData(parsed);
      } catch (err) {
        console.error("Error parsing diet data:", err);
      }
    }
  }, [router.query.data]);

  const exportPDF = () => {
    if (!dietData) return;
    const doc = new jsPDF();
    
    // Title
    doc.setFontSize(20);
    doc.setTextColor(37, 99, 235); // Blue color
    doc.text(`Ayur Diet Plan for ${dietData.patient.name}`, 20, 25);
    
    // Patient Info
    doc.setFontSize(12);
    doc.setTextColor(55, 65, 81); // Gray color
    doc.text(`Age: ${dietData.patient.age} | Gender: ${dietData.patient.gender}`, 20, 40);
    doc.text(`Prakriti: ${dietData.patient.prakriti} | Condition: ${dietData.patient.condition || 'None'}`, 20, 50);
    doc.text(`Preferences: ${dietData.patient.preferences}`, 20, 60);
    
    // Table header
    doc.setFontSize(14);
    doc.setTextColor(0, 0, 0);
    let y = 80;
    
    // Draw table header
    doc.setFillColor(219, 234, 254); // Light blue background
    doc.rect(20, y - 5, 170, 15, 'F');
    doc.text('Day', 25, y + 5);
    doc.text('Breakfast', 55, y + 5);
    doc.text('Lunch', 95, y + 5);
    doc.text('Dinner', 135, y + 5);
    
    y += 20;
    
    // Table rows
    dietData.dietPlan.forEach((day, idx) => {
      // Alternate row colors
      if (idx % 2 === 0) {
        doc.setFillColor(249, 250, 251); // Light gray
        doc.rect(20, y - 5, 170, 15, 'F');
      }
      
      doc.setFontSize(11);
      doc.text(day.day, 25, y + 5);
      doc.text(day.meals.Breakfast, 55, y + 5);
      doc.text(day.meals.Lunch, 95, y + 5);
      doc.text(day.meals.Dinner, 135, y + 5);
      
      y += 15;
    });
    
    // Footer
    doc.setFontSize(10);
    doc.setTextColor(107, 114, 128);
    doc.text('Generated by Ayur Diet - Personalized Ayurvedic Nutrition', 20, y + 20);
    doc.text(`Created on: ${new Date().toLocaleDateString()}`, 20, y + 30);

    doc.save(`${dietData.patient.name}-ayur-diet-plan.pdf`);
  };

  if (!dietData) return <p className="p-6">No diet data available.</p>;

  return (
    <div className="p-6 bg-gray-100 min-h-screen">
      <h1 className="text-3xl font-bold mb-4 text-center text-blue-600">
        Diet Chart for {dietData.patient.name}
      </h1>
      <p className="text-center text-lg text-green-600 mb-6 font-medium">
        ðŸ“‹ Recommended Ayurvedic diet plan based on your Prakriti and health profile
      </p>
      <div className="mb-6 bg-white p-4 rounded-lg shadow-sm">
        <h3 className="text-lg font-semibold mb-2 text-gray-800">Patient Profile:</h3>
        <div className="grid grid-cols-2 md:grid-cols-5 gap-2 text-sm text-gray-600">
          <div><span className="font-medium">Age:</span> {dietData.patient.age}</div>
          <div><span className="font-medium">Gender:</span> {dietData.patient.gender}</div>
          <div><span className="font-medium">Condition:</span> {dietData.patient.condition}</div>
          <div><span className="font-medium">Prakriti:</span> {dietData.patient.prakriti}</div>
          <div><span className="font-medium">Diet:</span> {dietData.patient.preferences}</div>
        </div>
      </div>
      
      <div className="bg-white rounded-lg shadow-sm overflow-hidden">
        <table className="min-w-full divide-y divide-gray-200">
          <thead className="bg-green-100">
            <tr>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Day</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">ðŸŒ… Breakfast</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">ðŸŒž Lunch</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">ðŸŒ™ Dinner</th>
            </tr>
          </thead>
          <tbody className="bg-white divide-y divide-gray-200">
            {dietData.dietPlan.map((day, idx) => (
              <tr key={idx} className={idx % 2 === 0 ? "bg-gray-50" : "bg-white"}>
                <td className="px-6 py-4 whitespace-nowrap text-sm font-bold text-blue-600">
                  {day.day}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  <div className="flex items-center">
                    <FaUtensils className="mr-2 text-green-500" />
                    {day.meals.Breakfast}
                  </div>
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  <div className="flex items-center">
                    <FaUtensils className="mr-2 text-yellow-500" />
                    {day.meals.Lunch}
                  </div>
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  <div className="flex items-center">
                    <FaUtensils className="mr-2 text-red-500" />
                    {day.meals.Dinner}
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      <div className="mt-6 text-center">
        <button
          onClick={exportPDF}
          className="inline-flex items-center px-6 py-3 bg-green-600 text-white font-medium rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition-colors"
        >
          ðŸ“„ Export as PDF
        </button>
      </div>
    </div>
  );
}
